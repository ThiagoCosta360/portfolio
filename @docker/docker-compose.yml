version: "3"

services:
  front:
    container_name: ${FRONT_NAME}
    build: 
      dockerfile: node.dockerfile
      context: .
    restart: unless-stopped
    working_dir: "/${FRONT_NAME}"
    volumes:
      - "../${FRONT_NAME}/:/${FRONT_NAME}"
    ports:
      - ${FRONT_PORT}

  back:
    container_name: ${BACK_NAME}
    build: 
      dockerfile: node.dockerfile
      context: .
    restart: unless-stopped
    ports:
      - ${BACK_PORT}
    working_dir: "/${BACK_NAME}"
    volumes:
      - ../${BACK_NAME}:/${BACK_NAME}
    # depends_on:
    #   - postgres

  # TODO: liberar porta 80 e 443 no modo prod
  nginx:
    container_name: nginx
    build: 
      dockerfile: nginx.dockerfile
      context: .
    restart: unless-stopped
    volumes: 
      - "../nginx/default.conf:/etc/nginx/conf.d/default.conf"
    ports:
      - ${NGINX_OPEN_PORT}
      - ${NGINX_SECURITY_PORT}
    logging:
      driver: none

  # postgres:
  #   container_name: postgres
  #   image: postgres:alpine
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data/
  #   environment:
  #     - "POSTGRES_USER=user"
  #     - "POSTGRES_PASSWORD=pass"
  #     - "POSTGRES_DB=db"
  #     - "POSTGRES_HOST_AUTH_METHO=trust"
  #   expose:
  #     - 5432
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U user -d db"]
  #     interval: 1s
  #     timeout: 1s
  #     retries: 10

# volumes:
#   postgres_data:
