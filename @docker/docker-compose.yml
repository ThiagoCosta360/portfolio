version: "3"

services:
  front:
    container_name: ${FRONT_NAME}
    build: 
      dockerfile: node.dockerfile
      context: ${GLOBAL_CONTEXT}
    restart: ${RESTART_POLICY}
    working_dir: "/${FRONT_NAME}"
    volumes:
      - "../${FRONT_NAME}/:/${FRONT_NAME}"
    ports:
      - "${FRONT_EXTERNAL_PORT}:${FRONT_INTERNAL_PORT}"

  back:
    container_name: ${BACK_NAME}
    build: 
      dockerfile: node.dockerfile
      context: ${GLOBAL_CONTEXT}
    restart: ${RESTART_POLICY}
    ports:
      - "${BACK_EXTERNAL_PORT}:${BACK_INTERNAL_PORT}"
    working_dir: "/${BACK_NAME}"
    volumes:
      - ../${BACK_NAME}:/${BACK_NAME}
    # depends_on:
    #   - postgres

  nginx:
    container_name: ${NGINX_NAME}
    build: 
      dockerfile: nginx.dockerfile
      context: ${GLOBAL_CONTEXT}
    restart: ${RESTART_POLICY}
    volumes: 
      - "${NGINX_PATH}/${NGINX_CONF_FILE}:/etc/nginx/conf.d/default.conf"
      - "${BUILD_PATH}:/usr/share/nginx/html"
    ports:
      - "${NGINX_EXTERNAL_OPEN_PORT}:${NGINX_INTERNAL_OPEN_PORT}"
      - "${NGINX_EXTERNAL_SECURITY_PORT}:${NGINX_INTERNAL_SECURITY_PORT}"

  # postgres:
  #   container_name: ${POSTGRES_NAME}
  #   image: postgres:alpine
  #   restart: ${RESTART_POLICY}
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data/
  #   environment:
  #     POSTGRES_USER: dev
  #     POSTGRES_PASSWORD: dev
  #     POSTGRES_DB: db
  #     POSTGRES_HOST_AUTH_METHO: trust
  #   expose:
  #     - 5432
  #   # healthcheck:
  #   #   test: ["CMD-SHELL", "pg_isready -U dev -d db"]
  #   #   interval: 1s
  #   #   timeout: 1s
  #   #   retries: 10

  # pgadmin:
  #   image: dpage/pgadmin4:6.8
  #   restart: ${RESTART_POLICY}
  #   container_name: ${PGADMIN_NAME}
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: "dev@dev.com"
  #     PGADMIN_DEFAULT_PASSWORD: "dev123"
  #   ports:
  #     - "${PGADMIN_INTERNAL_PORT}:${PGADMIN_EXTERNAL_PORT}"
  #   depends_on:
  #     - postgres

volumes:
  postgres_data:
